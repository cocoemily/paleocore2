# Generated by Django 2.2.19 on 2021-05-18 23:21

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('publications', '0003_auto_20210326_2356'),
        ('origins', '0038_auto_20210517_1409'),
    ]

    operations = [
        migrations.CreateModel(
            name='Nomen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, help_text='The date and time this resource was first created.', verbose_name='Created')),
                ('date_last_modified', models.DateTimeField(default=django.utils.timezone.now, help_text='The date and time this resource was last altered.', verbose_name='Modified')),
                ('problem', models.BooleanField(default=False, help_text='Is there a problem with this record that needs attention?')),
                ('problem_comment', models.TextField(blank=True, help_text='Description of the problem.', max_length=255, null=True)),
                ('remarks', ckeditor.fields.RichTextField(blank=True, help_text='General remarks about this database record.', null=True, verbose_name='Record Remarks')),
                ('last_import', models.BooleanField(default=False)),
                ('authorship', models.CharField(blank=True, help_text='The authors of the naming publication, date included, e.g. King, 1864', max_length=255, null=True)),
                ('year', models.CharField(blank=True, help_text='The year the name was published in yyyy format.', max_length=255, null=True)),
                ('type_specimen', models.CharField(blank=True, help_text='The catalog number of the type specimen, e.g. OH 7', max_length=255, null=True)),
                ('type_status', models.CharField(blank=True, choices=[('holotype', 'Holotype'), ('paratype', 'Paratype'), ('lectotype', 'Lectotype'), ('neotype', 'Neotype'), ('syntype', 'Syntype')], max_length=255, null=True)),
                ('paratypes', models.CharField(blank=True, max_length=255, null=True)),
                ('nomenclatural_status', models.CharField(blank=True, choices=[('valid', 'Valid'), ('invalid_gh', 'Invalid GH'), ('invalid_ga', 'Invalid GA'), ('invalid_gb', 'Invalid GB'), ('invalid_sh', 'Inavlid SH'), ('invalid_sm', 'Invalid SM'), ('invalid_sn', 'Invalid SN'), ('invalid_so', 'Inavlid SO'), ('suppressed', 'Supressed')], max_length=255, null=True, verbose_name='Nom. Status')),
                ('name_reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='name_reference', to='publications.Publication')),
                ('rank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='origins.TaxonRank')),
                ('references', models.ManyToManyField(blank=True, to='publications.Publication')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
    ]
